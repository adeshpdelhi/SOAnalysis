				 used.


In Juice, all the available heap memory is shared in "chunks" of pre-fixed size. The memory unit used is the "d-word" (that stands for "double-word"). The actual default size of the chunks is fixed to 64 d-words. The free memory chunks are organized in a linked list, while the chunks occupied by Java objects are connected to each other through a hierarchical structure in a way that resembles the representation of the UNIX file system.
The object allocation policy in Juice is strictly connected to the structure used to represent heap memory. Because of this structure, it becomes possible to allocate (and deallocate) Java objects in a time that is dependent only on the size of the object itself (predictability).
The proposed garbage collector is based on a non-copying tracing collector that performs memory reclamation only when a new object has to be allocated. The name of the garbage collector is because the cost paid by the mutator, in terms of wasted time for collector execution, is proportional to the size of the object to allocate.
Garbage Collector, Heap Memory Management: 
All the rest: 
