 development environment designed primarily for educational purposes at the high school and undergraduate level. It allows easy development of two-dimensional graphical applications, such as simulations and interactive games.
Greenfoot is being developed and maintained at the .


The Greenfoot project was initiated by 
The first full release, Greenfoot version 1.0, was published on 31 May 2006, with further releases following occasionally thereafter.
In May 2007, the Greenfoot project was awarded the "Duke's Choice Award" in the category "Java Technology in Education", and in 2010 it won the "Premier Award for Excellence in Engineering Education Courseware".
In March 2009, Greenfoot project became .
In August 2009, a textbook was published that teaches programming with Greenfoot.
The Greenfoot programming model consists of a  objects that are present in the world and can be programmed to act independently. The world and actors are represented by Java objects and defined by Java classes. Greenfoot offers methods to easily program these actors, including method for movement, rotation, changes of appearance, collision detection, etc.
Programming in Greenfoot at its most basic consists of subclassing two built-in classes, . An instance of the world subclass represents the world in which Greenfoot execution will occur. Actor subclasses are objects that can exist and act in the world. An instance of the world subclass is automatically created by the environment.
Execution in Greenfoot consists of a built-in main loop that repeatedly invokes each actor's  methods for the scenario's actors. Implementation is done in standard Java. Greenfoot offers API methods for a range of common tasks, such as animation, sound, randomisation, and image manipulation. All standard Java libraries can be used as well, and sophisticated functionality can be achieved.
Greenfoot aims to motivate learners quickly by providing easy access to animated graphics, sound and interaction. The environment is highly interactive and encourages exploration and experimentation. Pedagogically, the design is based on constructivist and apprenticeship approaches.
Secondly, the environment is designed to illustrate and emphasize important abstractions and concepts of object-oriented programming. Concepts such as the class/object relationship, methods, parameters, and object interaction are conveyed through visualizations and guided interactions. The goal is to build and support a mental model that correctly represents modern object-oriented programming systems.
For users of Greenfoot, a community site called the Greenfoot Gallery provides a platform to publish and discuss their projects. Anyone can set up an account on the Greenfoot Gallery and publish their work. When published, scenarios run live in a web browser, and are instantly playable by anyone worldwide. The ability to easily publish programming projects to the internet is seen as a significant motivator for young learners.
For educators, the project provides the Greenroom, a community site to discuss teaching strategies, exchange experiences and share material. In addition to a discussion forum, the Greenroom provides a shared repository of teaching resources, including numerous worksheets, project ideas, slide sets and other teaching aids.
In version 2.0, the editor and API received some major changes from the previous version 1.5.6. The editor added support for code completion, coloured scope highlighting, improved find and replace, and a new navigation view. . It adds the ability to pause and loop sounds, as well as adding MP3 support.
