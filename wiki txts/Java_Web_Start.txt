				.


Unlike  applications can be configured to have additional permissions.
Web Start has an advantage over applets in that it overcomes many compatibility problems with browsers' Java  versions. Web Start programs are no longer an integrated part of the web page, they are independent applications that run in a separate frame.
Web Start can also launch unmodified applets that are packaged inside .jar files, by writing the appropriate JNLP file. This file can also pass the applet parameters. Such applets also run in a separate frame. Applet launcher may not support some specific cases like loading class as resource.
Like applets, Java Web Start is .
The developer prepares a special XML file with JNLP extension. This file describes the application requirements, code location, parameters and additional permissions (if any). The browser downloads this file as any other and (following its ) opens it with Web Start tool. Web Start tool downloads all necessary resources and launches the application.
Java Web Start provides a series of  which provide various services to the application. Sun designed most of these services with the aim of allowing carefully controlled access to resources (such as files and the system clipboard) while restricting the application to authorized operations.
Sun introduced version 1.0 of Web Start in March 2001,, computer administrators no longer have to install it separately.
Programmers often speak of the 
Important Web Start features include the ability to automatically download and install a JRE in the case where the user does not have Java installed, and for programmers to specify which JRE version a given program needs in order to execute. The user does not have to remain connected to the Internet to execute the downloaded programs, because they execute from a locally maintained . Updates of the software download from the Web and become available when the user has a connection to the Internet, thus easing the burden of deployment.
Any computer user can use JNLP simply by installing a JNLP client (most commonly Java Web Start). The installation can occur automatically such that the end-user sees the client launcher downloading and installing the Java application when first executed.
JNLP works in a similar fashion to how HTTP/HTML works for the web. For ), and finally renders the page once it has received enough information. Page rendering usually starts before all resources have downloaded; some resources not critical to the layout of the page (such as images) can follow on afterwards.
JNLP mirrors this process; in the same way that a Web browser renders a webpage, a JNLP client "renders" a . After the user clicks on a weblink, the browser submits an URL to a webserver, which replies with a JNLP file (instead of a HTML file) for the application. The JNLP client parses this file, requests the resources specified (jar files), waits for the retrieval of all required resources, and then launches the application. The JNLP file can list resources as "lazy", which informs the JNLP client that the application does not need those resources to start, but can retrieve them later on when/if the application requests them.
The example below gives a simple JNLP file to launch the applet, specifying code base, source, main class and window size. Such file contains all necessary references and is self-sufficient to launch the application. As no permissions are requested, the code will run in a sandbox. JNLP also states that this application can run offline (if already cached) and should be updated as a background process.
To reduce the size of a Java Web Start application Sun Microsystems introduced a compression system called 
Java Web Start has supported Pack200 since it first appeared, but initially this feature required server-side cooperation and a certain amount of expertise to set up. When Sun introduced Java SE 6u10, Pack200 support became available without the need for special server support. Application designers can enable or disable this feature within JNLP files.
On slow connections Pack200 gives a performance boost in application startup time and download time.
By default, Java Web Start applications run "restricted", which means that they do not have access to some system resources such as local files. But publishers can remove these restrictions by signing their Web Start applications with the .
The open-source 
JNLP implementations other than Sun's reference implementation:
